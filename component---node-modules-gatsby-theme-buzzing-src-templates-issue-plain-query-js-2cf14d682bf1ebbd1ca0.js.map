{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-buzzing/src/components/issue-plain-item.js","webpack:///./node_modules/gatsby-theme-buzzing/src/components/process-string.js","webpack:///./node_modules/gatsby-theme-buzzing/src/components/issue-plain-page.js","webpack:///./node_modules/gatsby-theme-buzzing/src/templates/issue-plain-query.js"],"names":["ItemBox","props","type","body","arr","item","index","locale","pageContext","datetime","imageRemote","author","originalUrl","authorUrl","channelUrl","channel","url","provider","finalAuthorUrl","finalAuthor","finalUrl","finalExcerpt","getTitle","getExcerpt","data-test","data-index","itemScope","itemType","sx","m","listStyle","h4","itemProp","href","color","video","img","maxHeight","display","src","alt","blockquote","p","whiteSpace","regex","fn","key","result","concat","tag","width","ml","mr","mb","push","processString","hr","mt","Items","data","basePath","issueNumber","currentPage","date","dateISO","items","allBlogPost","nodes","siteMetadata","site","siteTitle","title","pageTitle","i18next","t","seoTitle","seoDescription","maxWidth","mx","px","pt","description","h1","fontSize","pb","siteUrl","rel","content","padding","dateTime","pl","map","textAlign","Date","getFullYear","as","Link","to","PostsPage"],"mappings":"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","file":"component---node-modules-gatsby-theme-buzzing-src-templates-issue-plain-query-js-2cf14d682bf1ebbd1ca0.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Styled, Link } from \"theme-ui\"\nimport ProcessString from \"./process-string\"\nimport { getTitle, getExcerpt } from \"../util\"\nimport Video from \"gatsby-theme-timeline/src/components/item-video\"\nconst ItemBox = props => {\n  const {\n    item,\n    index,\n    pageContext: { locale },\n  } = props\n  let {\n    datetime,\n    imageRemote,\n    author,\n    originalUrl,\n    authorUrl,\n    channelUrl,\n    channel,\n    url,\n    provider,\n  } = item\n  const finalAuthorUrl = authorUrl || channelUrl\n  const finalAuthor = author || channel\n  const finalUrl = originalUrl || url\n  const finalExcerpt =\n    provider === \"Twitter\" ? getTitle(item, locale) : getExcerpt(item, locale)\n  return (\n    <li\n      data-test=\"item-container\"\n      data-index={props.index}\n      itemScope\n      itemType=\"https://schema.org/Article https://schema.org/itemListElement\"\n      sx={{ m: 0, listStyle: \"none\" }}\n    >\n      <Styled.h4>\n        <Link itemProp=\"name\" href={finalUrl} sx={{ color: \"text\" }}>\n          {index + 1}. {provider === \"Twitter\" ? null : getTitle(item, locale)}\n        </Link>\n      </Styled.h4>\n\n      {imageRemote && !item.video && (\n        <Styled.img\n          sx={{ maxHeight: \"512px\", display: \"block\" }}\n          src={imageRemote}\n          alt=\"item hero\"\n          itemProp=\"image\"\n        ></Styled.img>\n      )}\n      <Video item={item}></Video>\n      <Styled.blockquote data-test=\"item-header\" sx={{ color: \"#718096\" }}>\n        {finalExcerpt && (\n          <Styled.p\n            itemProp=\"description\"\n            sx={{\n              color: \"textMuted\",\n              whiteSpace: `pre-line`,\n            }}\n          >\n            {ProcessString(provider, finalExcerpt)}\n          </Styled.p>\n        )}\n        <Styled.p data-test=\"source\">\n          Posted by{\" \"}\n          <Link href={finalAuthorUrl} itemProp=\"author\">\n            {finalAuthor}\n          </Link>{\" \"}\n          at{\" \"}\n          <Link href={url} itemProp=\"datePublished\">\n            {datetime}\n          </Link>{\" \"}\n          on {provider}{\" \"}\n          {provider === \"Reddit\" && (\n            <Link href={channelUrl} itemProp=\"datePublished\">\n              {`/r/${channel}`}\n            </Link>\n          )}\n        </Styled.p>\n      </Styled.blockquote>\n      <Styled.hr\n        sx={{\n          mt: \"48px\",\n          mb: \"48px\",\n        }}\n      ></Styled.hr>\n    </li>\n  )\n}\nexport default ItemBox\n","/** @jsx jsx */\nimport { jsx, Link } from \"theme-ui\"\nimport processString from \"react-process-string\"\nimport Twemoji from \"react-twemoji\"\n//\nexport default function processReactString(type, body) {\n  let arr = [\n    {\n      regex: /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/,\n      fn: (key, result) => {\n        return (\n          <Link key={key} href={`${result[0]}`}>\n            <span> {result[0]}</span>\n          </Link>\n        )\n      },\n    },\n  ]\n  if (type === \"Twitter\") {\n    arr = arr.concat([\n      {\n        regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:(?:@|＠)(?!\\/))([a-zA-Z0-9/_]{1,15})(?:\\b(?!@|＠)|$)/,\n        fn: (key, result) => {\n          return (\n            <Link href={`https://twitter.com/${result[1]}`} key={key}>\n              <span> @{result[1]}</span>\n            </Link>\n          )\n        },\n      },\n      {\n        regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:#(?!\\/))([a-zA-Z0-9/_]{1,280})(?:\\b(?!#)|$)/,\n        fn: (key, result) => {\n          return (\n            <Link key={key} href={`https://twitter.com/hashtag/${result[1]}`}>\n              <span> #{result[1]}</span>\n            </Link>\n          )\n        },\n      },\n      {\n        regex: /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/,\n        fn: (key, result) => {\n          const emoji = (\n            <Twemoji\n              tag=\"span\"\n              sx={{\n                \"> img\": {\n                  width: `1.2rem`,\n                  ml: `0.2rem`,\n                  mr: `0.075rem`,\n                  mb: `-0.2rem`,\n                },\n              }}\n              key={key}\n            >\n              {result[1]}\n            </Twemoji>\n          )\n          return emoji\n        },\n      },\n    ])\n  } else if (type === \"Youtube\") {\n    arr.push({\n      regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:#(?!\\/))([a-zA-Z0-9/_]{1,280})(?:\\b(?!#)|$)/,\n      fn: (key, result) => {\n        return (\n          <Link key={key} href={`https://www.youtube.com/hashtag/${result[1]}`}>\n            <span> #{result[1]}</span>\n          </Link>\n        )\n      },\n    })\n  }\n  const finalBody = processString(arr)(body)\n  return finalBody\n}\n","/** @jsx jsx */\nimport ItemBox from \"./issue-plain-item\"\nimport { jsx, Styled, Link as LinkUI } from \"theme-ui\"\nimport { LocalizedLink as Link } from \"gatsby-theme-i18n\"\nimport i18next from \"i18next\"\nimport SEO from \"gatsby-theme-timeline/src/components/seo\"\nimport ItemsFooter from \"gatsby-theme-timeline/src/components/items-footer\"\n\nconst Items = ({ data, pageContext }) => {\n  const { basePath, currentPage: issueNumber, date, dateISO } = pageContext\n  const items = data.allBlogPost.nodes\n  const {\n    site: { siteMetadata },\n  } = data\n  const siteTitle = siteMetadata.title\n  const pageTitle =\n    siteMetadata.title +\n    \": \" +\n    i18next.t(`Weekly Selection`) +\n    \"-\" +\n    i18next.t(\"Issue {{issueNumber}}\", `Issue ${issueNumber}`, {\n      issueNumber,\n    })\n  const seoTitle =\n    i18next.t(`Weekly Selection`) +\n    \"-\" +\n    i18next.t(\"Issue {{issueNumber}}\", `Issue ${issueNumber}`, {\n      issueNumber,\n    }) +\n    ` - ${siteTitle}`\n  const seoDescription = i18next.t(\n    `Click to view Issue {{issueNumber}} of {{siteTitle}}`,\n    {\n      siteTitle,\n      issueNumber,\n    }\n  )\n  return (\n    <div\n      sx={{\n        maxWidth: [`full`, `3xl`],\n        mx: `auto`,\n        px: [4, 4],\n        pt: 4,\n      }}\n      itemScope\n      itemType=\"https://schema.org/ItemList\"\n    >\n      <SEO title={seoTitle} description={seoDescription} />\n      <Styled.h1 sx={{ mb: 3, fontSize: 4 }} itemProp=\"name\">\n        {pageTitle}\n      </Styled.h1>\n      <address sx={{ pb: 4 }}>\n        <LinkUI href={siteMetadata.siteUrl} rel=\"author\">\n          {siteMetadata.author}\n        </LinkUI>\n        <time\n          sx={{\n            color: \"textMuted\",\n            \"&:before\": {\n              content: \"'\\u2022'\",\n              padding: \"0 7px\",\n            },\n          }}\n          dateTime={dateISO}\n        >\n          {date}\n        </time>\n      </address>\n      <article>\n        <ul sx={{ pl: 0, m: 0 }}>\n          {items.map((item, index) => {\n            return (\n              <ItemBox\n                key={`item-box-${index}`}\n                index={index}\n                basePath={basePath}\n                item={item}\n                pageContext={pageContext}\n              ></ItemBox>\n            )\n          })}\n        </ul>\n      </article>\n      <ItemsFooter pageContext={pageContext}></ItemsFooter>\n\n      <footer\n        sx={{\n          mt: 4,\n          pb: 3,\n          textAlign: \"center\",\n        }}\n      >\n        © {new Date().getFullYear()}\n        <LinkUI\n          sx={{ ml: 4, mr: 2 }}\n          data-test=\"main-site-link\"\n          href=\"https://www.buzzing.cc\"\n        >\n          Buzzing.cc\n        </LinkUI>\n        <LinkUI\n          as={Link}\n          data-test=\"all-issues\"\n          sx={{ mx: 2, color: \"textMuted\" }}\n          to=\"/issues\"\n        >\n          All Issues\n        </LinkUI>\n        <LinkUI\n          sx={{ mx: 2, color: \"textMuted\" }}\n          data-test=\"privacy-link\"\n          href=\"https://www.buzzing.cc/privacy\"\n        >\n          Privacy\n        </LinkUI>\n        <LinkUI\n          sx={{ mx: 2, color: \"textMuted\" }}\n          data-test=\"terms-link\"\n          href=\"https://www.buzzing.cc/terms\"\n        >\n          Terms of Service\n        </LinkUI>\n        {` `}\n      </footer>\n    </div>\n  )\n}\nexport default Items\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/issue-plain-page\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query CustomItemsIssuesPostsQuery(\n    $maxHeight: Int!\n    $skip: Int!\n    $limit: Int!\n    $filter: BlogPostFilterInput\n    $tagsFilter: BlogPostFilterInput\n  ) {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        siteUrl\n        social {\n          name\n          url\n          external\n          prefetch\n        }\n        menuLinks {\n          name\n          url\n          external\n          prefetch\n        }\n        localize {\n          locale\n          title\n          description\n          social {\n            name\n            url\n            external\n            prefetch\n          }\n          menuLinks {\n            name\n            url\n            external\n            prefetch\n          }\n        }\n      }\n    }\n    tagsGroup: allBlogPost(\n      sort: { fields: [date, slug], order: DESC }\n      filter: $tagsFilter\n    ) {\n      group(field: tags) {\n        fieldValue\n        totalCount\n      }\n    }\n    allBlogPost(\n      limit: $limit\n      skip: $skip\n      sort: { fields: [date, slug], order: DESC }\n      filter: $filter\n    ) {\n      nodes {\n        id\n        excerpt\n        slug\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        dateISO: date\n        datetime: date(formatString: \"YYYY-MM-DD HH:mm\")\n        tags\n        image {\n          childImageSharp {\n            fluid(maxHeight: $maxHeight) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        imageAlt\n        ... on SocialMediaPost {\n          provider\n          thirdPartyId\n          url\n          originalUrl\n          imageRemote\n          video {\n            url\n            embed\n            width\n            height\n          }\n          channel\n          channelUrl\n          author\n          authorUrl\n          authorImage {\n            childImageSharp {\n              fixed(width: 48, height: 48) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          authorSlug\n          score\n          views\n          sharedCount\n          likeCount\n          sharedContent {\n            excerpt\n            slug\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            dateISO: date\n            datetime: date(formatString: \"YYYY-MM-DD HH:mm\")\n            tags\n            imageRemote\n            image {\n              childImageSharp {\n                fluid(maxHeight: $maxHeight) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            imageAlt\n            authorImage {\n              childImageSharp {\n                fixed(width: 24, height: 24) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            video {\n              url\n              embed\n              width\n              height\n            }\n            channel\n            channelUrl\n            author\n            authorUrl\n            authorSlug\n            score\n            views\n            sharedCount\n            likeCount\n          }\n          parent {\n            ... on RedditJson {\n              localize {\n                title\n                the_new_excerpt\n                locale\n              }\n            }\n            ... on HnJson {\n              localize {\n                title\n                locale\n              }\n            }\n            ... on RedirectJson {\n              localize {\n                title\n                locale\n              }\n            }\n            ... on YoutubeJson {\n              localize {\n                title\n                description\n                locale\n              }\n            }\n            ... on PhJson {\n              localize {\n                description\n                tagline\n                locale\n              }\n            }\n            ... on TweetJson {\n              localize {\n                locale\n                full_text\n                quoted_status_full_text\n                retweeted_status_full_text\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}